# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.23)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS aquila-engine vma imgui)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target aquila-engine
add_library(aquila-engine SHARED IMPORTED)

set_target_properties(aquila-engine PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "GLM_FORCE_DEPTH_ZERO_TO_ONE"
  INTERFACE_INCLUDE_DIRECTORIES "/home/lux/prog/AquilaEngine/aquila-engine/include"
  INTERFACE_LINK_LIBRARIES "SDL2::SDL2;vma;imgui"
)

# Create imported target vma
add_library(vma INTERFACE IMPORTED)

set_target_properties(vma PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/lux/prog/AquilaEngine/aquila-engine/third-party/vma"
)

# Create imported target imgui
add_library(imgui SHARED IMPORTED)

set_target_properties(imgui PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/lux/prog/AquilaEngine/aquila-engine/third-party/imgui;/home/lux/prog/AquilaEngine/aquila-engine/third-party/imgui/misc/cpp;/home/lux/prog/AquilaEngine/aquila-engine/third-party/imgui/backends"
)

# Import target "aquila-engine" for configuration "Debug"
set_property(TARGET aquila-engine APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(aquila-engine PROPERTIES
  IMPORTED_LOCATION_DEBUG "/home/lux/prog/AquilaEngine/aquila-engine/lib/libaquila-engine.so"
  IMPORTED_SONAME_DEBUG "libaquila-engine.so"
  )

# Import target "imgui" for configuration "Debug"
set_property(TARGET imgui APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(imgui PROPERTIES
  IMPORTED_LINK_DEPENDENT_LIBRARIES_DEBUG "SDL2::SDL2"
  IMPORTED_LOCATION_DEBUG "/home/lux/prog/AquilaEngine/aquila-engine/lib/libimgui.so"
  IMPORTED_SONAME_DEBUG "libimgui.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
